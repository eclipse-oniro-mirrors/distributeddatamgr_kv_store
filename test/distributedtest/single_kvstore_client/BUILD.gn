# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/distributeddatamgr/data_share/datashare.gni")

module_output_path = "kv_store/distributeddatafwk"

###############################################################################
config("module_private_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "${datashare_innerapi_path}/common/include",
    "${datashare_innerapi_path}/provider/include",
    "//commonlibrary/c_utils/base/include",
    "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/include",
    "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/src",
    "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/distributeddatafwk/include",
    "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/distributeddatafwk/src",
    "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/distributeddatafwk/test/distributedtest/single_kvstore_client",
    "//foundation/distributeddatamgr/kv_store/interfaces/innerkits/app_distributeddata/include",
    "//foundation/distributeddatamgr/kv_store/interfaces/innerkits/distributeddata/include",
    "//foundation/distributeddatamgr/datamgr_service/services/distributeddataservice/app/include",
    "//foundation/distributeddatamgr/distributedfile/interfaces/kits/js/src/mod_securitylabel",
    "//test/testfwk/developer_test/aw/distributed",
    "//base/hiviewdfx/hitrace/interfaces/native/innerkits/include",
  ]
  lib_dirs = [ "//foundation/appexecfwk/libs" ]
}

old_source_config = [
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/distributeddatafwk/src/blob.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/distributeddatafwk/src/change_notification.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/distributeddatafwk/src/data_query.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/distributeddatafwk/src/distributed_kv_data_manager.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/distributeddatafwk/src/ikvstore_client_death_observer.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/distributeddatafwk/src/ikvstore_data_service.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/distributeddatafwk/src/ikvstore_observer.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/distributeddatafwk/src/ikvstore_sync_callback.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/distributeddatafwk/src/kv_utils.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/distributeddatafwk/src/kvstore_client_death_observer.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/distributeddatafwk/src/kvstore_datashare_bridge.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/distributeddatafwk/src/kvstore_observer_client.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/distributeddatafwk/src/kvstore_service_death_notifier.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/distributeddatafwk/src/kvstore_sync_callback_client.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/distributeddatafwk/src/sync_observer.cpp",
  "//foundation/distributeddatamgr/kv_store/interfaces/innerkits/distributeddata/include/types.h",
]

kvdb_source_config = [
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/src/auto_sync_timer.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/src/backup_manager.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/src/convertor.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/src/dev_manager.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/src/device_convertor.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/src/kv_types_util.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/src/kvdb_service_client.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/src/observer_bridge.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/src/security_manager.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/src/single_store_impl.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/src/store_factory.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/src/store_manager.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/src/store_result_set.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/src/store_util.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/src/system_api.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/src/task_executor.cpp",
  "//foundation/distributeddatamgr/kv_store/frameworks/innerkitsimpl/kvdb/src/task_executor_adapter.cpp",
]

ohos_distributedtest("DistributedTest") {
  module_out_path = module_output_path
  sources = old_source_config + kvdb_source_config
  sources += [
    "distributed_test_helper.cpp",
    "distributed_test_helper.h",
  ]
  sources += [ "distributed_test.cpp" ]

  configs = [ ":module_private_config" ]

  external_deps = [
    "c_utils:utils",
    "device_manager:devicemanagersdk",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "hitrace:libhitracechain",
    "hilog:libhilog",
    "huks:libhukssdk",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]

  deps = [
    "//foundation/distributeddatamgr/datamgr_service/services/distributeddataservice/adapter:distributeddata_adapter",
    "//foundation/distributeddatamgr/kv_store/frameworks/libs/distributeddb/:distributeddb",
    "//third_party/googletest:gtest",
  ]
}

ohos_distributedtest("DistributedTestAgent") {
  module_out_path = module_output_path

  sources = old_source_config + kvdb_source_config

  sources += [ "distributed_test_agent.cpp" ]

  configs = [ ":module_private_config" ]

  external_deps = [
    "c_utils:utils",
    "device_manager:devicemanagersdk",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "hitrace:libhitracechain",
    "hilog:libhilog",
    "huks:libhukssdk",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]

  deps = [
    "//foundation/distributeddatamgr/datamgr_service/services/distributeddataservice/adapter:distributeddata_adapter",
    "//foundation/distributeddatamgr/kv_store/frameworks/libs/distributeddb/:distributeddb",
    "//third_party/googletest:gtest",
  ]
}

###############################################################################
group("distributedtest") {
  testonly = true

  deps = [
    ":DistributedTest",
    ":DistributedTestAgent",
  ]
}
###############################################################################
